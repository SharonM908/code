USE TrialRun;

SELECT * FROM sales_data_sample;

SELECT COUNT(*) FROM sales_data_sample;

SELECT ORDERNUMBER, COUNT(ORDERNUMBER)
	FROM sales_data_sample
	GROUP BY ORDERNUMBER
	HAVING COUNT(ORDERNUMBER)>1;

ALTER TABLE sales_data_sample
	ADD ID INT IDENTITY(1,1);

/* confirm ID number matches row count */ 
SELECT MAX(ID) 
	FROM sales_data_sample;

/* use SELECT INTO to create a new table with only customer data */
SELECT DISTINCT CUSTOMERNAME,
	PHONE,
	ADDRESSLINE1,
	ADDRESSLINE2,
	CITY,
	STATE,
	POSTALCODE,
	COUNTRY,
	TERRITORY,
	CONTACTFIRSTNAME,
	CONTACTLASTNAME
	INTO CUSTOMER
	FROM sales_data_sample;

/* confirm new table */
SELECT * FROM CUSTOMER;
SELECT DISTINCT(CUSTOMERNAME) FROM sales_data_sample;

/* add primary key to new table */
ALTER TABLE CUSTOMER
	ADD CUSTID INT IDENTITY(100,1);

SELECT DISTINCT(CUSTOMERNAME), CUSTID FROM CUSTOMER;

SELECT CUSTOMERNAME, COUNT(CUSTOMERNAME)  /* shows that I have duplicate customer name records */
	FROM CUSTOMER
	GROUP BY CUSTOMERNAME
	HAVING COUNT(CUSTOMERNAME) >1;

ALTER TABLE CUSTOMER
	ADD PRIMARY KEY (CUSTID);

/* create 3rd table with product information */
SELECT DISTINCT PRODUCTCODE,
	PRODUCTLINE,
	MSRP
INTO PRODUCTS
FROM sales_data_sample;

/* PRODUCTCODE can act as primary key */
ALTER TABLE PRODUCTS
	ADD PRIMARY KEY (PRODUCTCODE);

SELECT DISTINCT (PRODUCTCODE)
	FROM sales_data_sample;

SELECT COUNT(*) FROM PRODUCTS;

SELECT * FROM PRODUCTS;

SELECT COUNT(ORDERNUMBER)
	FROM sales_data_sample;

SELECT ORDERNUMBER, COUNT(ORDERNUMBER)
	FROM sales_data_sample
	GROUP BY ORDERNUMBER
	HAVING COUNT(ORDERNUMBER) >1;

SELECT * FROM sales_data_sample
	WHERE ORDERNUMBER=10411;

SELECT ORDERNUMBER,
	   ORDERLINENUMBER,
	   QUANTITYORDERED,
	   PRICEEACH,
	   PRODUCTCODE,
	   CUSTOMERNAME,
	   SALES,
	   ORDERDATE,
	   STATUS
INTO ORDERS
FROM sales_data_sample;

-- confirm new table	   
SELECT COUNT(*) FROM ORDERS;
SELECT * FROM ORDERS;

ALTER TABLE ORDERS
	ADD ORDID INT IDENTITY(100,1);

ALTER TABLE ORDERS
	ADD PRIMARY KEY (ORDID);

ALTER TABLE ORDERS
	ADD CUSTID INT;

ALTER TABLE ORDERS
	ADD FOREIGN KEY (CUSTID) REFERENCES CUSTOMER(CUSTID); 

/* update table using foreign keys for PRODUCTCODE and CUSTOMERNAME */
UPDATE ORDERS
	SET CUSTID = CUSTOMER.CUSTID
	WHERE ORDERS.CUSTOMERNAME = CUSTOMER.CUSTOMERNAME;

